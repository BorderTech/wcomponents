/* wc.common.accesskey.dt.scss
 *
 * Provides the styling for the accesskey indicator. @accesskey is a property of WLabel, WFieldSet, WButton, WLink
 * WMenuItem, WSubMenu, WTab.
 *
 * In most cases the accesskey will be in a label. It may, however be in a legend, link or button. The accesskey
 * character will be the first text character which is a case insensitive match for the accessKey attribute of the
 * element which is labelled.
 *
 * The callout is placed by XSLT (see wc.common.accessKey.xsl) and is (where possible) placed as the first child of the
 * labelled element.
 *
 * NOTE: Collision detection
 * The callout position is fixed and, by default, is above the item to which it points. The TODO to allow for collision
 * detection is very low priority since most application use a banner of some kind and the access keys live below this
 * banner.
 */

@import "wc.common.accesskey_vars.scss";

.wc_alt .wc_accesskey { //the character in a string corresponding to the control's access key is underlined
	text-decoration: underline;
}
/*	Accesskey Tooltips
	Styling for the callout (shows when ALT is held down to fire an accesskey).
	Some of these styles are !important because of the nesting arrangements. see,
	for example, top level menu item with an accesskey.
	NOTE: the padding is important to over-ride menu rules which may also apply.
*/
[role="tooltip"]{
	background-color: $wc_ui_color_tooltipBackground;
	@include accesskeyBorder;
	color: $wc_ui_color_tooltipForeground;
	font-weight: bold !important;
	margin-left: -0.5em;
	margin-top: -2.25em;
	padding: 0.25em !important;
	position: absolute;
	text-align: center;
	width:auto !important;
	&:before, &:after {
		border-style: solid;
		border-width: 0.5em 0.25em 0;
		bottom: 0;
		content: '';
		display: inline-block;
		left: 30%;
		margin-bottom: -0.5em;
		position: absolute;
	}
	&:before {
		border-color: $wc_ui_color_tooltipBorder transparent transparent;
	}
	&:after {
		border-color: $wc_ui_color_tooltipBorder transparent transparent;
	}
	// Callout display needs a particularly explicit selector to override menu [role] position but cannot use !important
	// because we cannot guarantee that the hidden selector is more specific.
	&, .menu [role] & {
		display: inline-block;
	}
}
/* end accesskey.dt.scss */