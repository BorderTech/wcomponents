<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:ui="https://github.com/bordertech/wcomponents/namespace/ui/v1.0"
	xmlns:html="http://www.w3.org/1999/xhtml"
	elementFormDefault="qualified"
	targetNamespace="https://github.com/bordertech/wcomponents/namespace/ui/v1.0">
	<xs:element name="datalist">
		<xs:annotation>
			<xs:documentation>A datalist is a list of options to be consumed by a selection component. It allows for 
			client caching of frequently used or reused option lists.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="option" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>Each option in the datalist. Note that options in this context have no knowledge of their 
								selected status so we do not have a selected attribute.
							<!-- 
								We could use a restriction inheritance but it is unnecessarily complex and poorly 
								implemented in validators so having a standalone option element is a pragmatic choice.
							-->
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="value" type="xs:string" use="required">
									<xs:annotation>
										<xs:documentation>The value returned to the application if the option is selected when a POST is made.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="isNull" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Indicates that the option is a null option for validation purposes. This
											is necessary in lists which do not allow no selection (such as WDropdown). Not output if "false".</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<!-- This will be the id of the list which was requested. -->
			<xs:attribute name="id" type="xs:ID" use="required"/>
		</xs:complexType>
	</xs:element>
</xs:schema>
