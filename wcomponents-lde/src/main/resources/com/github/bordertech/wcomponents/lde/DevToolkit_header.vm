## This velocity template is used by the com.github.bordertech.wcomponents.lde.DevToolkit class to output the
## controls necessary for the developer toolkit UI. It must not rely on any java WComponents or
## XML in the "ui" namespace.
##
## This template renders content before the wrapped WComponent UI.
##
## ------------------------------------------------------------------------------------------------
## Macros
## ------------------------------------------------------------------------------------------------

#macro(booleanPropertyToggle $fieldName $active $fieldDescription)
  <input type="checkbox" value="true" name="$!{fieldName}" id="$!{fieldName}" onClick="document.forms.devToolkitForm.submit();" #if($!{active})checked="checked"#end />
  <label for="$!{fieldName}">$!{fieldDescription}</label>
#end

#macro(button $buttonName $buttonDescription)
   <input type="submit" name="$!{buttonName}" id="$!{buttonName}" value="$!{buttonDescription}"/>
#end

#macro(table $keyValuePairArray)
  <table>
  <tr><th>Key</th><th>Value</th></tr>
  #foreach($row in $keyValuePairArray)
     <tr>
        #foreach($col in $row)<td>$this.encode($col)</td>#end
     </tr>
  #end
  </table>
#end

#macro(tree $root)
  <script type="text/javascript">
     function devToolkitUITreeToggle(node)
     {
        node.className = node.className == 'open' ? 'closed' : 'open';
     }
  </script>
  <div id='devToolkitUITree'>
     <ul>
        #doTree($root)
     </ul>
  </div>
#end

#macro(doTree $node)
  #if($node.childCount > 0)
     <li class='open'><span onClick="devToolkitUITreeToggle(this.parentNode);">$node</span>
        <ul>
           #foreach($child in $node.children)#doTree($child)#end
        </ul>
     </li>
  #else
     <li>$node</li>
  #end
#end

## ------------------------------------------------------------------------------------------------
## Styles. We don't want to interfere with the rest of the LDE, so send this in-line.
## ------------------------------------------------------------------------------------------------
<style type="text/css">
#devToolkit_wrappedContent.showId button[id]:after {
	content: " (" attr(id) ") ";
	opacity:0.3;
	filter:alpha(opacity=30);
}
#devToolkit_wrappedContent.showId label[for]:after {
	content: " (" attr(for) ") ";
	opacity:0.3;
	filter:alpha(opacity=30);
}
#devToolkitControls .button {
	text-align: bottom;
	background-color: #686868;
	bottom:-25px;
	color:#FFFFFF;
	display:block;
	font-size:12px;
	padding:5px;
	position:absolute;
	left:0;
	text-decoration:none;
	line-height: normal;
	border-bottom: 2px solid #fa0;
}
#devToolkitControls:hover {
	margin-top: 0px;
}
#devToolkitControls label {
    margin-right: 2em;
}
#devToolkitControls {
	-moz-transition: all 0.5s ease-in-out;
	-webkit-transition: all 0.5s ease-in-out;
	-o-transition: all 0.5s ease-in-out;
	transition: all 0.5s ease-in-out;
	background-color: #686868;
	height: 75px;
	color: #fff;
	position: fixed;
	padding-top: 25px;
	margin-top: -100px;
	width: 100%;
	z-index:100;
}
#devToolkitOutput td, #devToolkitOutput th {
	border: 1px solid #aaa;
	text-align: left;
}
#devToolkitOutput h3 {
	margin-top: 25px;
}
#devToolkitOutput table {
	width: auto;
}
#devToolkitUITree li span {
    cursor: pointer;
}
#devToolkitUITree li.closed:before {
    content: "&#9654; ";
}
#devToolkitUITree li.open:before {
    content: "&#9660; ";
}
#devToolkitUITree li.closed ul {
    display: none;
}
#devToolkitUITree ul {
    list-style:none;
    cursor: auto;
}
</style>
## ------------------------------------------------------------------------------------------------
## Main dev toolkit UI
## ------------------------------------------------------------------------------------------------
<div id="devToolkitControls">
	<form name="devToolkitForm" id="devToolkitForm" action="$!uic.getEnvironment().getPostPath()" method="POST">

	   <input type="hidden" name="wc_devToolkit" value="x"/>

       <label for="devToolkit_rootComponent">UI: </label>
	   <input name="devToolkit_rootComponent" id="devToolkit_rootComponent" type="text" size="80" value="$!{this.rootComponent}"/>
	   #button("devToolkit_rootComponentSelect" "Change UI")
	   <br/>

       #booleanPropertyToggle("devToolkit_showTree" $!{this.showTree} "Show tree")
       #booleanPropertyToggle("devToolkit_showConfig" $!{this.showConfig} "Show config")
       #booleanPropertyToggle("devToolkit_showUicStats" $!{this.showUicStats} "Show UIC stats")
       #booleanPropertyToggle("devToolkit_whitespaceFilterEnabled" $!{this.whitespaceFilterEnabled} "Enable whitespace filter")
       #booleanPropertyToggle("devToolkit_debugEnabled" $!{this.debugEnabled} "Debug mode")
       #booleanPropertyToggle("devToolkit_showRequest" $!{this.showRequest} "Show HTTP request")

       <input type="checkbox" id="devToolkit_showIds" name="devToolkit_showIds" value="true" #if($!{active})checked="checked"#end #if ($!{this.showIds})checked="checked"#end onclick="document.getElementById('devToolkit_wrappedContent').className = this.checked ? 'showId' : '';"/>
       <label for="devToolkit_showIds">Show ids</label>

	   #button("devToolkit_refreshPage" "Refresh page")&#160;
	   #button("devToolkit_resetSession" "Reset session")

	   ##
	   ## TODO: Show debug structure (Display AJAX / subordinate triggers)
	   ##

	</form>
	<div class="clear"></div>
	<a href="#" class="button">Dev tools</a>
</div>

## ------------------------------------------------------------------------------------------------
## Dev toolkit output
## ------------------------------------------------------------------------------------------------
<div id="devToolkitOutput">

##
## Tree view
##
#if ($!{this.showTree})
  &#160;
  <h3>WComponent UI tree</h3>
  ##<ul>
  ##<pre>$this.encode($this.tree)</pre>
  ##</ul>
  #tree($this.tree)
#end

##
## Config view
##
#if ($!{this.showConfig})
  &#160;
  <h3>WComponent configuration</h3>
  <table>
  <tr><th>Key</th><th>Value</th></tr>
  #foreach($row in $this.getConfig())
     <tr>
        #foreach($col in $row)<td>$this.encode($col)</td>#end
     </tr>
  #end
  </table>
#end

##
## UIC stats
##
#if ($!{this.showUicStats})
  &#160;
  <h3>UIContext stats</h3>
  $this.getUicStats()
#end

##
## Request info
##
#if ($!{this.showRequest} && $!{this.requestHeaders})
  &#160;
  <h3>HTTP $!{this.requestMethod} request headers</h3>
  #table($this.getRequestHeaders())
  <h3>HTTP $!{this.requestMethod} request parameters</h3>
  #table($this.getRequestParameters())
#end
</div>

##
## The main WComponent being served by the UI is wrapped in a div so that we
## can target its content in CSS, e.g. to display the component IDs.
##
<div id="devToolkit_wrappedContent" #if ($!{this.showIds})class="showId"#end>