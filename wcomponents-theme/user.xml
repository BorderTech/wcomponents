<project>
	<!-- This is an example build property override file.

		It is expected that you will make a copy and rename your copy as described below.
		You can then set properties in your copy to customize your build suit your local
		environment.

		************************************************************************
		FILE NAME:
		************************************************************************
		You must rename this file for it to take effect. You have two choices
		for naming:
		1. {user.name}.xml (e.g. if your user name is mary.jones then name it
			"mary.jones.xml")
		2. wc_theme_build_properties.xml

		If BOTH files exist and define the same property then the definition/s
		in {user.name}.xml will take precedence.

		************************************************************************
		FILE LOCATION:
		************************************************************************
		You can place these files in two locations:
		1. The {user.home}/.wc directory (where ever java thinks your home
			directory is, create a directory called .wc).
		2. The "theme" project root directory (e.g. right alongside the build
			scripts)

		If files exist in both locations and define the same property then the
		definitions from files in {user.home}/.wc take precedence over those in
		the project root dir.

		************************************************************************
		THEME BUILD CONFIGURATION
		************************************************************************

		npm.loglevel:
			Where the build uses NPM to fetch dependencies you can configure the
			loglevel. See: https://docs.npmjs.com/misc/config#loglevel

		<property name="npm.loglevel" value="verbose"/>

		minifiy.resources.off:
			Turning off minification speeds up a build slightly for testing
			during development but should not be used routinely. Needing to do
			this is a strong indicator that you need a new dev machine.

		<property name="minifiy.resources.off" value="true"/>

		images.to.base64.dataurls:
			Turning off base64 encoding of images will also decrease build time
			slightly but again is not recommended or necessary for routine use.
			It can be handy for debugging SVG issues but usually loading the
			recalcitrant SVG directly from the target directory will give you
			better info.

		<property name="images.to.base64.dataurls" value="false"/>

		tmp.dir:
			The directory to use as temp during build. Defaults to the JAVA
			temp directory. Useful in conjunction with build.preserve.tmp.onexit

		<property name="tmp.dir" location="/path/to/temp/build/dir"/>

		build.preserve.tmp.onexit:
			By default the intermediate artefacts created during the build are
			deleted once the build has finished. If you ever need to debug build
			problems you may want to preserve these intermediate artefacts. To
			do so set this property. Not recommended or necessary for routine
			use.

		<property name="build.preserve.tmp.onexit" value="true"/>

		************************************************************************
		Optimisation for HTTP2
		************************************************************************
		Eventually the build will optimise for http2 unless this property is true.
		<property name="build.optimise.http1" value="true"/>
		************************************************************************
		UNIT TESTING
		************************************************************************
		Intern capabilities

		<property name="intern.capabilities" value="recordVideo: false, recordScreenshots: false" />

		Intern Tunnel.
		The default is set for Saucelabs but also needs secrets to actually run on Saucelabs. For local
		testing this could be set to NullTunnel or SeleniumTunnel with appropriate tunnel options.
		<property name="intern.tunnel" value="SauceLabsTunnel" />

		Intern tunnel options
		<property name="intern.tunnel.options" value="verbose: true" />

		test.environments:
			Determines which browsers to run tests against.
			This is written into the intern config file in the "environments" array.
			By default the value is "{ browserName: 'chrome' }"

			If you wanted, for example, to test IE11 you could uncomment the line below:

		<property name="test.environments" value="{ browserName: 'internet explorer', version: '11' }"/>
	-->
</project>
