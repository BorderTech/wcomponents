<project name="BuildXML" default="build" >
	<!--
		Build the XML directory for a given implementation. The resulting dir will contain:
		1. All the xml from "common" AND
		2. All the xml for the specific implementation.

		Where there is a name conflict (a file with the same name in both common and implementation)
		then this is interpreted as an override by the implementation, in other words the implementation
		version of the file will overwrite the common version.

		This build must be called with the name of the implementation rootdir set in property:
		"implementation.name". If not set then the files from "common" alone will be used.

	-->

	<import file="build-import.xml" />
	<property name="xml.rootdir" location="${common.src.rootdir}/xml" />
	<property name="impl.xml.rootdir" location="${impl.src.main.dir}/xml" />
	<property name="xml.build.target.dir" location="${output.dir}/${implementation.name}/${xml.target.dir.name}" />
	<property name="plugin.xml.dir.name" value="xml" />

	<target name="init" depends="clean">
		<property file="${properties.build.constants}" />
	</target>

	<target name="build" depends="init" description="Builds XML resources">
		<copy todir="${xml.build.target.dir}" overwrite="true" flatten="true">
			<fileset dir="${xml.rootdir}" includes="*.xml, *.rdf" excludesfile="${excludesfile}" />
			<fileset dir="${common.src.plugin.dir}" includesfile="${plugin.includesfile}" excludesfile="${excludesfile}" erroronmissingdir="false">
				<filename name="**/${plugin.xml.dir.name}/*.xml" />
			</fileset>
			<fileset dir="${impl.xml.rootdir}" includes="*.xml, *.rdf"  erroronmissingdir="false"/>
			<fileset dir="${impl.src.plugin.dir}" includesfile="${plugin.includesfile}" excludesfile="${excludesfile}" erroronmissingdir="false">
				<filename name="**/${plugin.xml.dir.name}/*.xml" />
			</fileset>
			<filterchain>
				<expandproperties />
				<deletecharacters chars="\t" />
				<trim />
				<ignoreblank />
				<striplinebreaks />
			</filterchain>
		</copy>
		<copy todir="${xml.build.target.dir}" overwrite="true" flatten="true">
			<fileset dir="${xml.rootdir}">
				<include name="*" />
				<exclude name="*.xml" />
				<exclude name="*.rdf" />
				<excludesfile name="${excludesfile}" />
			</fileset>
			<fileset dir="${impl.xml.rootdir}" excludes="*.xml, *.rdf" erroronmissingdir="false">
				<include name="*" />
			</fileset>
		</copy>
		<echo message="Done building xml" />
	</target>

	<target name="clean" description="Cleans up all artifacts produced by this build">
		<delete dir="${xml.build.target.dir}" />
		<echo message="Clean from ${ant.file}" />
	</target>
</project>
