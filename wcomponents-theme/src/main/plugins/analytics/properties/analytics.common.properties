# Properties for the web analytics plugin
#
# Currently WComponents has support for IBM Core Metrics (CM) and Open Web Analytics (OWA). Other JavaScript analytics
# tools should be reasonably easy to implement.
#
# All plugins will need a path. The build should put the plugin into a directory immediately under the base path. The
# plugin will need a name and a path for use in the config "paths" property and in dependency declaration within the
# plugins scripts. These will often be the same value
analytics.core.path.name=analytics
analytics.core.path.path=${plugins.target.dir.name}/analytics/js
########################################################################################################################
# CONFIG
# We need to set up some module configuration
# Which analytics module are we going to use? These correspond with the filename of the analytics subclass without
# the .js file extension.
#OWA
#analytics.core.module.name=owa
#CM
analytics.core.module.name=ibmcm

#Most JavaScript based tracking relies on cookies and it would be very unusual to not need a cookie domain. OWA and CM 
#both use this. The cookie domain can be over-ridden in WApplication but we use a default in the theme so that this
#does not have to be set every page if the domain does not change.
analytics.core.cookieDomain=mysite.com

########################################################################################################################
# GLOBAL SHIM
#We use requirejs shims to load non-AMD code which is required by external tools. This section defines the items needed
#by the shim. This is part of the module config which is written by the XSLT.

#The name of the file to load WITHOUT the .js extension. This becomes the module name.
#OWA
#analytics.core.shim.file=owa.tracker-combined-min
#CM (not-customised) If you use a custom CM implementation this will have to change.
analytics.core.shim.file=eluminate

#In order to load a synchronous non-AMD dependency AND have IE be able to tell if it has actually been loaded we need to
#be able to tell it the name of ONE global in the imported file. For OWA this is easy: it uses OWA, ICM, however, adds a
#plethora of globals. Fortunately it is one-in, all-in so we can pick any of them. It is probably easiest to use the 
#call to set the client id as this is always mandatory.
# for OPW use
#analytics.core.shim.global=OWA
#for CM use:
analytics.core.shim.global=cmSetClientID
#
#
#The shim uses a path to the file to load. This should not include a protocol so http[s] are both catered.
#OWA - You will need to point this at your OWA installation
#analytics.core.shim.path=//example.com/path/
#CM (hosted) - If you use 1st party hosting you will need to change this
analytics.core.shim.path=//libs.coremetrics.com
########################################################################################################################
analytics.core.track.type.event=ev
analytics.core.track.type.display=disp
analytics.core.attribute.shouldTrack=data-wc-track
analytics.core.attribute.hasTracked=data-wc-tracked