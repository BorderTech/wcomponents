/* wc.ui.table.scss */
// This is the core of the table CSS. The other CSS files are used for functional images and other items which are less
// likely to be implementation specific
@import 'table_vars';

table {
	@include border;
	border-collapse: collapse;
	border-spacing: 0;
	min-width: 100%;
}

// fix the layout of tables where column width is applied
.wc_table_fix {
	table-layout: fixed;
}

th,
td {
	padding: $table-cell-padding;
	text-align: $preferred-alignment;
	vertical-align: top;
}

.wc_table_rowexp_container,
.wc_table_sel_wrapper {
	// text-align: center;
	vertical-align: text-top;
}

// differentiate the th from the td with these functional classes
//scss-lint:disable QualifyingElement
th.wc_table_rowexp_container,
th.wc_table_sel_wrapper { // reset the vertical alignment of th with these classes
	vertical-align: inherit;
}

.wc_table_colauto {
	width: 0.5rem; // actually anything small but more than zero.
}

@include respond-phone {
	.wc-respond > table {
		&,
		caption,
		thead,
		tfoot,
		tbody,
		tr,
		th,
		td {
			@include border-box;
			display: block;
			width: 100%;
		}

		caption {
			padding: $wc-gap-small 0;
		}

		tr {
			+ tr[aria-level='1'],
			+ tr:not([aria-level]) {
				margin-top: $wc-gap-small;
			}
		}

		th,
		td {
			padding: $wc-gap-small;
		}

		.wc_table_sel_wrapper,
		.wc_table_rowexp_container {
			display: none;
		}

		.wc_table_rowexp_container[role='button'] {
			display: inline-block;
			padding: $wc-gap-small 0;
			width: auto;

			+ .wc-th,
			+ .wc-td {
				display: inline-block;
				padding-left: 0;
				width: calc(100% - 1rem);
			}
		}

		@for $i from 2 to 6 {
			.wc_tbl_hierarchic > [aria-level='#{$i}'] {
				padding-left: $i * $table-hierarchic-indent-small;


				> th,
				> td {
					padding-left: 0; // override all the guff in the main CSS
				}
			}
		}
	}
}
