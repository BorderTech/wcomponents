/* loading.scss
 * styling for the loading indicator that appears for page reloads and AJAX regions
 */

@import "vars_all.scss";


#wc_ui_loading{
	position: fixed;
	text-align: center;
	top: $vgap_normal;
	vertical-align: middle;
	width: 100%;
	z-index: 100;
	div {
		background-color: $wc_ui_color_globalBackground;
		background-repeat: no-repeat;
		color: $wc_ui_color_globalForeground;
		display: inline-block;
		margin: 0 auto;
		padding: 1em;
		vertical-align: middle;
		width: auto;
		&:before {/* the spinner */
			background-image: url(../images/loading.svg);
			background-repeat: no-repeat;
			background-size: 100% 100%;
			content: "\a0";
			display: inline-block;
			height: 2em;
			margin-right: $hgap_normal;
			vertical-align: middle;
			width: 2em;
		}
	}
}


/*
 * ajax busy areas
 * min-width and min-height needed to ensure that first load (where we have no content yet)
 * still displays the loading indicator - otherwise we are setting the background image on
 * a container of 0px width and height
 * We make the background of the busy element transparent and set all of its children to
 * visibility: hidden so the element appears to just vanish and leave its loading indicator
 * You may want to change this (a Cheshire cat maybe?)

 * Some of these properties have to be important to over-ride specific component's rules
 */
[aria-busy="true"]{
	background-color: transparent !important;
	background-position: 50% 50%;
	background-repeat: no-repeat;
	background-size: $lineSize $lineSize !important;
	border-color: transparent !important;
	color: $wc_ui_color_disabledForeground;
	background-image: url(../images/loading.svg) !important
}

/*
 * make any interactive child element of a busy region invisible. We want them to take up their space
 * but not be shown to reduce the likelihood of a user interacting with them whilst they
 * are being updated/replaced.*/
[aria-busy="true"] > *{
	visibility: hidden
}
/* end wc.common.loading.css */
