//These mixins are likely to be deleted if no-one wants them.

// You will have to manually add the import for these, they are not part of mixins-common.
// If you use this in a view which does not use _mixins-common or _vars you will also have to manually import one.


$symbol-font: 'Lucida Sans Unicode', 'Arial Unicode MS';


/// Add a background-image to almost anything. The default for this macro will add a small, centered,
///   non-repeateing background image to the element.
///
/// @param {string} $url The URL of your image.
/// @param {dimension} $height [$line-size] The vertical aspect of background-size. Set -1 to omit the background-size rule.
/// @param {repetition} $repeat [no-repeat] The repeat rule for your image.
/// @param {dimension} $width [$line-size] The horizontal aspect of background-size. Set -1 to omit the background-size rule.
/// @param {position|dimension} $x [50%] The x-position aspect of background-position. The background-position rule is
/// omitted if both $x and $y are 0.
/// @param {position|dimension} $y [50%] The y-position aspect of background-position. The background-position rule is
/// omitted if both $x and $y are 0.
@mixin background-image($url, $height: $line-size, $repeat: no-repeat, $width: $line-size, $x: 50%, $y: 50%) {
	background-image: url($url);
	@if ($x != 0 or $y != 0) {
		background-position: $x $y;
	}
	@if($repeat != repeat) {
		background-repeat: $repeat;
	}
	@if($height == contain or $width == contain) {
		background-size: contain;
	}
	@else if($height == cover or $width == cover) {
		background-size: cover;
	}
	@else if($height != -1 and $width != -1) {
		background-size: $width $height;
	}
	@content;
}

/// Add a scaled, centred background-image (as an icon). This is basically a cut-down version of the background-image
/// mixin for adding iconic images to things (usually buttons). The image is always a square of edge length $line-size.
/// @todo Delete this and replace calls with a call directly to background-image.
///
/// @param {string} $url The URL of your image.
/// @param {position|dimension} $x [50%] The x-position aspect of background-position. The background-position rule is
///   omitted if both $x and $y are 0.
/// @param {position|dimension} $y [50%] The y-position aspect of background-position. The background-position rule is
///   omitted if both $x and $y are 0.
@mixin background-image-icon ($url, $x: 50%, $y: 50%) {
	@include background-image($url: $url, $x: $x, $y: $y);
}

/// Makes a square box (for exampe to put a 100% scaled SVG in).
/// @param {display} $display [inline-block] How you want your box to display.
/// @param {dimension} $height [$line-size] The height of the box. Set auto to omit this rule.
/// @param {dimension} $width [$line-size] The width of the box. Set auto to omit this rule.
@mixin make-box($display: inline-block, $height: $line-size, $width: $line-size) {
	display: $display;
	@if ($height != auto) {
		height: $height;
	}
	@if ($width != auto) {
		width: $width;
	}
}

/// Use the symbol font as the font family for the element.
@mixin use-symbol-font {
	font-family: $symbol-font;
}
