// #############################################################################
// BUSY
// Page loading indicator and aria-busy elements.
// #############################################################################
// The size of the icon and the gap size must be n the same units.
$wc-root-loading-icon-size: $wc-icon-large !default;
// The padding of the loading indicator
$wc-root-loading-padding: $wc-gap-large !default;
// The width of the loading indicator. If this is -1 it is ignored and the
// loading indicator will be the size of the icon. If you set this then you may
// want to consider where you want the content to appear. If you set the loading
// indicator box-sizing to border-box and set this then you may need to redo the
// loading offsets.
$wc-root-loading-width: -1 !default;
$wc-root-loading-height: -1 !default;
// The horizontal offset of the screen loading indicator. You probably do not
// want this in the absolute left of the screen, but hey, that is up to you.
// If this is 0 then it will be ignored. Recommend <= 50%.
$wc-root-loading-horizontal-offset: 50% !default;
// The vertical offset of the loading indicator. Set to 0 to not have any offset
// (i.e. the loading indicator will at the top of the screen). Recommend 30-33%.
$wc-root-loading-vertical-offset: 30% !default;
// The size to reserve for the aria-busy indicator
$wc-common-busy-size: $wc-icon-normal !default;
// The opacity of content of an aria-busy container.
// Ignored if set to 1 or greater.
// We used to set these to visibility: hidden but that has some negative
// side-effects.
// If set to 0 then it has the same effect as visibility:hidden but without
// the support for obsolete browsers unless $wc-common-busy-content-usefade !=1.
$wc-common-busy-content-opacity: .25 !default;
// Use a CSS fade when an area becomes busy.
// Ignored if $wc-common-busy-content-opacity >= 1.
// Set to anything other than 1 to not use a fade in/out.
$wc-common-busy-content-usefade: 1 !default;
// The duration of the fade effect.
// Ignored if $wc-common-busy-content-usefade != 1.
$wc-common-busy-content-fadeduration: 1s !default;

// #############################################################################
// Should the page fade in when it is no longer busy?
// 1 is yes - use fade-in; anything else is no.
// NOTE: it is possible that fade-in MAY cause havoc with automated testing!
$wc-app-usefade: 0 !default;
// how long should the fade transition take? Ignored if $wc-app-usefade != 1.
$wc-app-fadeduration: 1s !default;
