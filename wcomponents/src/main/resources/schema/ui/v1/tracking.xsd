<?xml version="1.0" encoding="UTF-8"?>
<!--

XML schema for tracking

Used to turn on and pass config to client side Web Analytics tools. The attributes
of this element are used to set up page view tracking.
-->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="https://github.com/dibp/wcomponents/namespace/ui/v1.0"
	xmlns:ui="https://github.com/dibp/wcomponents/namespace/ui/v1.0">
	<xs:complexType name="trackable">
		<xs:annotation>
			<xs:documentation><p>Tracking element is used to turn on and pass config to client side Web Analytics tools. The attributes of this element are used to set up page view
					tracking.</p>
				<p>There may be content length restrictions in the tracking system your application chooses to use, these restrictions should be tested and reflected in the
					implementation of the tracking interface, not in this schema.</p></xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="param" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Parameters for passing through to general configuration and tracking functions.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="key" use="required" type="xs:string" />
					<!-- nb: not used by IBM core metrics, which does use the value -->
					<xs:attribute name="value" use="required" type="xs:string" />
					<xs:attribute name="type">
						<xs:annotation>
							<xs:documentation><p>The type attribute is an optional attribute used to differentiate between params used by the tracking system. </p>
								<p>The 'types' of the param do not really matter too much and may need to be extended if a particular tracking system is implemented which requires
									further granularity. This is, admittedly, pretty unlikely.</p>
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:NMTOKEN">
								<xs:enumeration value="custom1" />
								<xs:enumeration value="custom2" />
								<xs:enumeration value="custom3" />
								<xs:enumeration value="custom4" />
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string">
			<xs:annotation>
				<xs:documentation>A human readable name for the trackable component. If this is not set then the page tracking will use the component's id attribute which may or
					may not be desirable. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="cat" type="xs:string">
			<xs:annotation>
				<xs:documentation>A <u>cat</u>egory indicator for the page view tracker. Some tools categorize and some don't but it is pretty common.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<!-- The element for complex page tracking -->
	<xs:element name="analytic">
		<xs:annotation>
			<xs:documentation>An extention of the track type for screen level tracking. This is used in ui:application to
				set page view tracking parameters and configuration.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ui:trackable">
					<xs:attribute name="clientId" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>All common enterprise level tools have some form of client identification. In most cases this identifier can be set once in the theme
								at compile time and left alone but we have put this attribute in so that many applications can use a common theme and set individual client
								identifiers. Obviously it could even change per page view but that would be unusual.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="cd" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation><p><u>C</u>ookie <u>D</u>omain. This attribute maps to a domain (not a URI) which is used as part of the configuration of tracking
									software. Each common tracking tool calls this property something different but all of them use some form of domain identifier used to set and
									get tracking cookies.</p>
								<p>For most real uses this can be set once in the WComponent theme at compile time and forgotten. It is not likely that an application would have to
									switch its cookie domain at run time.</p></xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="dcd" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation><p><u>D</u>ata <u>C</u>ollection <u>D</u>omain. This attribute maps to a domain (not a URI) which is used as part of the configuration
									of tracking software. Each common tracking tool calls this property something different but all of them use some form of location
									identifier.</p>
								<p>For most real uses this can be set once in the WComponent theme at compile time and forgotten. It is not likely that an application would have to
									switch its data collection domain at run time.</p></xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<!--
					NOTE: these two are very implementation specific and may not be generic enough to be useful.
				<xs:attribute name="search" type="xs:string">
					<xs:annotation>
						<xs:documentation>Used to track the number of search results.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="results" type="xs:long">
					<xs:annotation>
						<xs:documentation>Used to track the number of search results. Only useful if @search is also populated.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				-->
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<!-- the element for complex component tracking -->
	<xs:element name="tracking">
		<xs:annotation>
			<xs:documentation>Used to add complex tracking data to any component which is trackable.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ui:trackable">
					<xs:attribute name="for" type="xs:NMTOKEN" use="required">
						<xs:annotation>
							<xs:documentation>The id of the component to be tracked.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

</xs:schema>
